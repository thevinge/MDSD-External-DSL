/*
 * generated by Xtext 2.20.0
 */
package org.xtext.mdsd.external.validation

import org.xtext.mdsd.external.quickCheckApi.QuickCheckApiPackage
import org.xtext.mdsd.external.quickCheckApi.Builder
import org.eclipse.xtext.validation.Check
import org.xtext.mdsd.external.quickCheckApi.Test
import org.xtext.mdsd.external.quickCheckApi.JsonDefinition
import org.xtext.mdsd.external.quickCheckApi.Postproposition

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class QuickCheckApiValidator extends AbstractQuickCheckApiValidator {
	
	@Check
	def checkDuplicateTestname(Builder builder){
		val duplicates = builder.tests.groupBy[it.name].filter[k,v| v.size >= 2]
		 if (duplicates.size > 0){
		 	duplicates.forEach[k, v|v.forEach[error("Test name duplicate",it, QuickCheckApiPackage.Literals.TEST__NAME)]]
		 	
		 }
		
	}
	
	@Check
	def checkDuplicateDefinitions(Test test){
		val duplicates = test.definitions.groupBy[it.name].filter[k,v| v.size >= 2]
		if (duplicates.size > 0){
		 	duplicates.forEach[k, v|v.forEach[error("Json name duplicate",it, QuickCheckApiPackage.Literals.VAR_DEFINITION__NAME)]]
		 	
		 }
	}
	
	
	@Check
	def checkPostCondition(Postproposition postcondition){
		
	}
	
	
}
